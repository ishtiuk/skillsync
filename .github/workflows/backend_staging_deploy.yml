name: STAGING/BE - Deploy to ECR

on:
  push:
    branches:
      - develop
    paths:
      - 'backend/**'


env:
  AWS_REGION: us-west-1
  AWS_ACCOUNT_ID: 677276115434
  ECR_REPOSITORY: greenjobs/backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Set Image Tag
        run: |
          ECR_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
          
          # Get the latest Git tag, fallback to "latest" if none
          GIT_TAG=$(git describe --tags --always || echo "latest")

          # Ensure only "latest" and the Git tag are used
          echo "IMAGE_TAG=$GIT_TAG" >> $GITHUB_ENV
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          
          echo "Using tags: latest, $GIT_TAG"

      - name: Enable BuildKit for Faster Caching
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1

      - name: Pull Latest Image for Caching (if exists)
        continue-on-error: true
        run: |
          docker pull $ECR_URI:latest || echo "No previous latest image found"

      - name: Build, Tag, and Push Docker Image with Caching
        run: |
          docker build \
            --cache-from=$ECR_URI:latest \
            --tag $ECR_URI:latest \
            --tag $ECR_URI:$IMAGE_TAG \
            ./backend
          
          docker push $ECR_URI:latest
          docker push $ECR_URI:$IMAGE_TAG
